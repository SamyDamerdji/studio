'use server';
/**
 * @fileOverview A Genkit flow for generating images based on a prompt.
 */
import { ai } from '@/ai/genkit';
import { GenerateImageInputSchema, GenerateImageOutputSchema, type GenerateImageInput, type GenerateImageOutput } from '@/ai/schemas/lesson-schemas';


export async function generateImage(prompt: GenerateImageInput): Promise<GenerateImageOutput> {
  if (!prompt) {
    return { imageUrl: '' };
  }
  return await generateImageFlow(prompt);
}

const generateImageFlow = ai.defineFlow(
  {
    name: 'generateImageFlow',
    inputSchema: GenerateImageInputSchema,
    outputSchema: GenerateImageOutputSchema,
  },
  async (prompt) => {
    try {
      const { media } = await ai.generate({
        model: 'googleai/gemini-2.0-flash-preview-image-generation',
        prompt: `${prompt}. Style: digital painting, fantasy, mystical, high detail, cinematic lighting.`,
        config: {
          responseModalities: ['TEXT', 'IMAGE'],
        },
      });

      if (!media || !media.url) {
        throw new Error('No image was generated by the model.');
      }

      return { imageUrl: media.url };
    } catch (error) {
      console.error("Error in generateImageFlow:", error);
      // Return an empty string or a placeholder URL in case of error
      return { imageUrl: '' };
    }
  }
);
